Imágenes en donde no se detectó el contorno del espermatozoide:
7
10
25
27
30 (hay un objeto que no es el espermatozoide)
31
34
36
41
62 (hay dos objetos que no son espermatozoides)
65
67
99

Imágenes en donde no funcionó correctamente la normalización de pose:


Para extraer la región de la cabeza, necesito sacar el contorno con segunda mayor área, pero que esta área sea mayor que un valor determinado y que cumpla la forma ovalada.

Imágenes en las que falla la normalización de pose:
Si el eigenvector blanco está hacia abajo (posibles opciones):
- reflejar la imagen con respecto al eigenvector negro.
- rotar la imagen 180 grados <--- esta es la idea
 * Esto funciona con todas las imágenes, excepto con la #100.

Casos:
*Con la imagen original 


1. Eje X a la derecha y eje Y hacia arriba: es correcto en la mayoría de casos. Es incorrecto en la imagen 100.
2. Eje X a la derecha y eje Y hacia abajo: es corregible rotando 180° en la mayoría de casos.
3. Eje 

 
Parametrización del algoritmo. Necesito:
- Número de imágenes a procesar (por defecto lee todas las que están dentro de la carpeta Imagenes).
* Número de imágenes a usar para la reconstrucción (debe ser menor o igual al número de imágenes no descartadas).
- (opcional) nivel de aumento de resolución de las imágenes. NOTA: cambiar esto también requeriría un cambio del área threshold a usar.
- (opcional) parámetros del MeanShift
- (opcional) parámetros del SimpleBlobDetector
- Nombre de la carpeta en donde se guardan las imágenes normalizadas.
* step usado para el space carving
* nombre de la malla de salida

step = 0.01
Pruebas con varias imágenes:
1. 15 imágenes
puntos.size(): 47992
cuadrilateros.size(): 47992

real	20m43.004s
user	20m44.052s
sys	0m0.940s

2. 20 imágenes
puntos.size(): 40380
cuadrilateros.size(): 40378

real	20m43.004s
user	20m44.052s
sys	0m0.940s

3. 25
puntos.size(): 37632
cuadrilateros.size(): 37630

real	25m35.719s
user	25m36.764s
sys	0m0.920s

4. 30
puntos.size(): 36840
cuadrilateros.size(): 36838

real	29m43.081s
user	29m43.708s
sys	0m1.140s

5. 35
puntos.size(): 32222
cuadrilateros.size(): 32220

real	32m16.839s
user	32m17.752s
sys	0m0.928s

6. 40
puntos.size(): 29814
cuadrilateros.size(): 29812

real	36m32.507s
user	36m32.428s
sys	0m1.352s
